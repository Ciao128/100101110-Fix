from telethon import events
import asyncio
from userbot.utils import admin_cmd


@borg.on(admin_cmd(pattern=r"fdance"))
async def _(event):
    if event.fwd_from:
        return
    animation_interval = 1
    animation_ttl = range(0, 5)
    #input_str = event.pattern_match.group(1)
    #if input_str == "isro":
    await event.edit("Connecting..")
    animation_chars = [
"\n                     "        
"\n         **STEP-1**  "
"\n                     "
"\n                ⣶⣿⣶"
"\n                ⣿⣿⣿⣀"
"\n            ⣀⣿⣿⣿⣿⣿⣿"
"\n            ⣶⣿⠛⣭⣿⣿⣿⣿"
"\n            ⠛⠛⠛⣿⣿⣿⣿⠿"
"\n               ⠀⠀⣿⣿⣿"
"\n             ⠀⣀⣭⣿⣿⣿⣿⣀"
"\n           ⠤⣿⣿⣿⣿⣿⣿⠉"
"\n            ⣿⣿⣿⣿⣿⣿⠉"
"\n           ⣿⣿⣿⣿⣿⣿"
"\n           ⣿⣿⣿⣿⣿"
"\n           ⠉⠛⣿⣿⣶⣤"
"\n             ⠀⠉⠿⣿⣿⣤"
"\n             ⠀⣀⣤⣿⣿⣿"
"\n             ⠒⠿⠛⠉⠿⣿"
"\n          ⠀⠀   ⠀⠀⣀⣿⣿"
"\n          ⠀   ⠀⠀⣶⠿⠿⠛"
"\n                      ",
"\n                      "
"\n        **STEP-2**    "
"\n                      "
"\n                ⠀⠀⠀⠀⠀⠀⣤⣤"
"\n⠀⠀⠀⠀⠀⠀⠀            ⠀⠀⣿⣿⣿" 
"\n              ⣶⠀⠀⣀⣤⣶⣤⣉⣿⣿⣤⣀"
"\n           ⠤⣤⣿⣤⣿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣀"
"\n⠀            ⠛⠿⠀⠀⠀⠀⠉⣿⣿⣿⣿⣿⠉⠛⠿⣿⣤"
"\n⠀⠀⠀⠀             ⠀⠀⠀ ⠀⠿⣿⣿⣿⠛⠀⠀⠀⣶⠿"
"\n⠀⠀⠀              ⠀⠀⠀⠀⠀⣀⣿⣿⣿⣿⣤⠀⣿⠿"
"\n⠀⠀             ⠀⠀⠀⠀⠀⣶⣿⣿⣿⣿⣿⣿⣿⣿"
"\n⠀⠀⠀⠀             ⠀⠀⠀⠿⣿⣿⣿⣿⣿⠿⠉⠉"
"\n⠀⠀⠀⠀             ⠀⠀⠀⠉⣿⣿⣿⣿⠿"
"\n⠀⠀⠀⠀⠀              ⠀⠀⠀⣿⣿⣿⠉"
"\n⠀⠀⠀⠀⠀              ⠀⠀⠀⣛⣿⣭⣶⣀"
"\n⠀⠀⠀⠀              ⠀⠀⠀⠀⣿⣿⣿⣿⣿"
"\n⠀⠀⠀⠀⠀⠀              ⠀⠀⠀⣿⣿⠉⠛⣿"
"\n⠀⠀⠀⠀⠀⠀              ⠀⠀⠀⣿⣿⠀⠀⣿⣿"
"\n⠀⠀⠀⠀⠀          ⠀⠀⠀⠀    ⣿⣉⠀⣶⠿"
"\n⠀⠀⠀⠀         ⠀     ⠀⠀⠀⣶⣿⠿"
"\n⠀⠀⠀⠀              ⠀⠀⠀⠛⠿⠛"
"\n                           ",
"\n                           "
"\n         **STEP-3**        "
"\n                           "
"\n                   ⠀⠀⠀⠀⠀⠀⠀⣤⣶"
"\n⠀                 ⠀⠀⠀⣀⣀⠀⣶⣿⣿⠶"
"\n                 ⣶⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣤⣤"
"\n                ⠀⠉⠶⣶⣀⣿⣿⣿⣿⣿⣿⣿⠿⣿⣤⣀"
"\n⠀                ⠀⠀⣿⣿⠿⠉⣿⣿⣿⣿⣭⠀⠶⠿⠿"
"\n              ⠀  ⠀⠛⠛⠿⠀⠀⣿⣿⣿⣉⠿⣿⠶"
"\n             ⠀⠀  ⠀⠀⠀⣤⣶⣿⣿⣿⣿⣿"
"\n⠀             ⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⠒"
"\n            ⠀ ⠀⠀⠀⣀⣿⣿⣿⣿⣿⣿⣿"
"\n⠀            ⠀ ⠀⠀⠀⣿⣿⣿⠛⣭⣭⠉"
"\n⠀           ⠀⠀  ⠀⠀⣿⣿⣭⣤⣿⠛"
"\n⠀⠀           ⠀  ⠀⠀⠛⠿⣿⣿⣿⣭"
"\n⠀⠀⠀              ⠀⠀⠀⣿⣿⠉⠛⠿⣶⣤"
"\n⠀⠀               ⠀⠀⣀⣿⠀⠀⣶⣶⠿⠿⠿"
"\n⠀⠀⠀⠀⠀            ⠀⣿⠛"
"\n⠀⠀⠀              ⠀⣭⣶"
"\n                      ",
"\n                      "
"\n         **STEP-4**   "
"\n                      "
"\n                  ⠀⣶⣿⣶"
"\n⠀⠀            ⠀⣤⣤⣤⣿⣿⣿"
"\n⠀            ⠀⣶⣿⣿⣿⣿⣿⣿⣿⣶"
"\n⠀             ⣿⣿⣿⣿⣿⣿⣿⣿⣿"
"\n              ⣿⣉⣿⣿⣿⣿⣉⠉⣿⣶"
"\n⠀             ⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿"
"\n             ⣤⣿⣿⣿⣿⣿⣿⣿⠿⠀⣿⣶"
"\n           ⣤⣿⠿⣿⣿⣿⣿⣿⠿⠀⠀⣿⣿⣤"
"\n           ⠉⠉⠀⣿⣿⣿⣿⣿⠀⠀⠒⠛⠿⠿⠿"
"\n⠀           ⠀⠀⠉⣿⣿⣿⠀⠀⠀⠀⠀⠀⠉"
"\n⠀           ⠀⠀⣿⣿⣿⣿⣿⣶"
"\n⠀⠀⠀           ⠀⣿⠉⠿⣿⣿"
"\n⠀⠀            ⠀⣿⣤⠀⠛⣿⣿"
"\n⠀⠀⠀          ⠀⣶⣿⠀⠀⠀⣿⣶" 
"\n⠀⠀⠀⠀            ⠀⠀⠀⣭⣿⣿"
"\n                          ",
"\n                          "
"\n         **STEP 5**       "
"\n                          "
"\n⠀⠀⠀⠀⠀⠀          ⠀⠀⣤⣿⣿⠉"
"\n                  ⠀⣶⣿⠿⠀⠀⠀⣀⠀⣤⣤"
"\n                 ⠀⣶⣿⠀⠀⠀⠀⣿⣿⣿⠛⠛⠿⣤⣀"
"\n                ⣶⣿⣤⣤⣤⣤⣤⣿⣿⣿⣀⣤⣶⣭⣿⣶⣀"
"\n                ⠉⠉⠉⠛⠛⠿⣿⣿⣿⣿⣿⣿⣿⠛⠛⠿⠿"
"\n⠀⠀⠀                ⠀⠀⠀⠀⣿⣿⣿⣿⣿⠿"
"\n⠀⠀⠀⠀                 ⠀⠀⠀⠿⣿⣿⣿⣿"
"\n⠀⠀⠀⠀               ⠀⠀⠀⠀⣭⣿⣿⣿⣿⣿"
"\n⠀⠀⠀⠀               ⠀⠀⠀⣤⣿⣿⣿⣿⣿⣿"
"\n⠀⠀               ⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠿"
"\n⠀⠀⠀⠀               ⠀⠀⠀⣿⣿⣿⣿⣿⠿"
"\n⠀⠀⠀⠀              ⠀⠀⠀⣿⣿⣿⣿⣿"
"\n⠀⠀⠀⠀              ⠀⠀⠀⠉⣿⣿⣿⣿"
"\n⠀⠀⠀⠀               ⠀⠀⠀⠉⣿⣿⣿⣿"
"\n⠀⠀⠀                ⠀⠀⠀⠀⠀⠉⣿⠛⠿⣿⣤"
"\n⠀⠀⠀⠀                ⠀⠀⠀⠀⣀⣿⠀⠀⠀⣿⣿⣤"
"\n⠀⠀⠀                ⠀⠀⠀⠀⠀⣿⠀⠀⠀⣶⣿⠛⠉"
"\n⠀⠀⠀⠀               ⠀⠀⠀⠀⣤⣿⣿⠀⠀⠉"
"\n⠀⠀⠀⠀               ⠀⠀⠀⠀⠀⠉"
"\n⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",    

        ]

    for i in animation_ttl:
        await asyncio.sleep(animation_interval)
        await event.edit(animation_chars[i % 5])    
